{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/dbhelper.js","src/js/main.js","src/js/register.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/**\r\n * Common database helper functions.\r\n */\r\nexport default class DBHelper {\r\n\r\n  /**\r\n   * Database URL.\r\n   * Change this to restaurants.json file location on your server.\r\n   */\r\n  static get API_URL() {\r\n    const port = 1337; // port where sails server will listen.\r\n    return `http://localhost:${port}`;\r\n  }\r\n  /**\r\n   * Fetch all restaurants.\r\n   */\r\n  static fetchRestaurants(callback) {\r\n    fetch(`${DBHelper.API_URL}/restaurants`)\r\n      .then(response => response.json()\r\n      .then(restaurants => callback(null,restaurants)\r\n    )).catch(err => callback(err, null))\r\n  }\r\n    /**\r\n   * Fetch a restaurant by its ID.\r\n   */\r\n  static fetchRestaurantById(id, callback) {\r\n    fetch(`${DBHelper.API_URL}/restaurants/${id}`).then(response => {\r\n      if (!response.ok) return Promise.reject(\"Restaurant couldn't be fetched from network\");\r\n      return response.json();\r\n    }).then(fetchedRestaurant => {\r\n      // if restaurant could be fetched from network:\r\n      return callback(null, fetchedRestaurant);\r\n    }).catch(networkError => {\r\n      // if restaurant couldn't be fetched from network:\r\n      return callback(networkError, null);\r\n    });\r\n  }\r\n  /**\r\n   * Fetch restaurants by a cuisine type with proper error handling.\r\n   */\r\n  static fetchRestaurantByCuisine(cuisine, callback) {\r\n    // Fetch all restaurants  with proper error handling\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Filter restaurants to have only given cuisine type\r\n        const results = restaurants.filter(r => r.cuisine_type == cuisine);\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a neighborhood with proper error handling.\r\n   */\r\n  static fetchRestaurantByNeighborhood(neighborhood, callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Filter restaurants to have only given neighborhood\r\n        const results = restaurants.filter(r => r.neighborhood == neighborhood);\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a cuisine and a neighborhood with proper error handling.\r\n   */\r\n  static fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        let results = restaurants\r\n        if (cuisine != 'all') { // filter by cuisine\r\n          results = results.filter(r => r.cuisine_type == cuisine);\r\n        }\r\n        if (neighborhood != 'all') { // filter by neighborhood\r\n          results = results.filter(r => r.neighborhood == neighborhood);\r\n        }\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch all neighborhoods with proper error handling.\r\n   */\r\n  static fetchNeighborhoods(callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Get all neighborhoods from all restaurants\r\n        const neighborhoods = restaurants.map((v, i) => restaurants[i].neighborhood)\r\n        // Remove duplicates from neighborhoods\r\n        const uniqueNeighborhoods = neighborhoods.filter((v, i) => neighborhoods.indexOf(v) == i)\r\n        callback(null, uniqueNeighborhoods);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch all cuisines with proper error handling.\r\n   */\r\n  static fetchCuisines(callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Get all cuisines from all restaurants\r\n        const cuisines = restaurants.map((v, i) => restaurants[i].cuisine_type)\r\n        // Remove duplicates from cuisines\r\n        const uniqueCuisines = cuisines.filter((v, i) => cuisines.indexOf(v) == i)\r\n        callback(null, uniqueCuisines);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Restaurant page URL.\r\n   */\r\n  static urlForRestaurant(restaurant) {\r\n    return (`./restaurant.html?id=${restaurant.id}`);\r\n  }\r\n\r\n  /**\r\n   * Restaurant image URL.\r\n   */\r\n  static imageUrlForRestaurant(restaurant) {\r\n    let url = `/img/${(restaurant.photograph||restaurant.id)}.jpg`;\r\n    return url;\r\n  }\r\n\r\n  /**\r\n   * Map marker for a restaurant.\r\n   */\r\n   static mapMarkerForRestaurant(restaurant, map) {\r\n    // https://leafletjs.com/reference-1.3.0.html#marker  \r\n    const marker = new L.marker([restaurant.latlng.lat, restaurant.latlng.lng],\r\n      {title: restaurant.name,\r\n      alt: restaurant.name,\r\n      url: DBHelper.urlForRestaurant(restaurant)\r\n      })\r\n      marker.addTo(map);\r\n    return marker;\r\n  } \r\n\r\n  static mapOffline() {\r\n    const map = document.getElementById('map');\r\n    map.className = \"map-offline\";\r\n    map.innerHTML = `<div class=\"warning-icon\">!</div>\r\n    <div class=\"warning-message\">We're having problems loading Maps</div>\r\n    <div class=\"warning-suggestion\">Are you offline? If you need to see a map, please check back later.</div>`;\r\n  }\r\n\r\n}\r\n\r\n","import DBHelper from './dbhelper'\r\nimport './register';\r\nlet restaurants,\r\n  neighborhoods,\r\n  cuisines\r\nvar newMap\r\nvar markers = []\r\n\r\n/**\r\n * Fetch neighborhoods and cuisines as soon as the page is loaded.\r\n */\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n  initMap(); // added\r\n  fetchNeighborhoods();\r\n  fetchCuisines();\r\n});\r\n\r\n/**\r\n * Fetch all neighborhoods and set their HTML.\r\n */\r\nconst fetchNeighborhoods = () => {\r\n  DBHelper.fetchNeighborhoods((error, neighborhoods) => {\r\n    if (error) { // Got an error\r\n      console.error(error);\r\n    } else {\r\n      self.neighborhoods = neighborhoods;\r\n      fillNeighborhoodsHTML();\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Set neighborhoods HTML.\r\n */\r\nconst fillNeighborhoodsHTML = (neighborhoods = self.neighborhoods) => {\r\n  const select = document.getElementById('neighborhoods-select');\r\n  neighborhoods.forEach(neighborhood => {\r\n    const option = document.createElement('option');\r\n    option.innerHTML = neighborhood;\r\n    option.value = neighborhood;\r\n    select.append(option);\r\n  });\r\n}\r\n\r\n/**\r\n * Fetch all cuisines and set their HTML.\r\n */\r\nconst fetchCuisines = () => {\r\n  DBHelper.fetchCuisines((error, cuisines) => {\r\n    if (error) { // Got an error!\r\n      console.error(error);\r\n    } else {\r\n      self.cuisines = cuisines;\r\n      fillCuisinesHTML();\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Set cuisines HTML.\r\n */\r\nconst fillCuisinesHTML = (cuisines = self.cuisines) => {\r\n  const select = document.getElementById('cuisines-select');\r\n\r\n  cuisines.forEach(cuisine => {\r\n    const option = document.createElement('option');\r\n    option.innerHTML = cuisine;\r\n    option.value = cuisine;\r\n    select.append(option);\r\n  });\r\n}\r\n\r\n/**\r\n * Initialize leaflet map, called from HTML.\r\n */\r\nconst initMap = () => {\r\n  newMap = L.map('map', {\r\n    center: [40.722216, -73.987501],\r\n    zoom: 12,\r\n    scrollWheelZoom: false\r\n  });\r\nL.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}', {\r\nmapboxToken: 'pk.eyJ1Ijoiam10MzU1OSIsImEiOiJjamt2dW1hMG0wbTFwM3FueXFxbXE2d25oIn0.dAW03VzY-S0v6gErx55Z5g',\r\nmaxZoom: 18,\r\nattribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\r\n  '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\r\n  'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\nid: 'mapbox.streets'\r\n}).addTo(newMap);\r\n\r\nupdateRestaurants();\r\n}\r\n\r\n\r\n/* window.initMap = () => {\r\n  let loc = {\r\n    lat: 40.722216,\r\n    lng: -73.987501\r\n  };\r\n  self.map = new google.maps.Map(document.getElementById('map'), {\r\n    zoom: 12,\r\n    center: loc,\r\n    scrollwheel: false\r\n  });\r\n  updateRestaurants();\r\n} */\r\n\r\n/**\r\n * Update page and map for current restaurants.\r\n */\r\nconst updateRestaurants = () => {\r\n  const cSelect = document.getElementById('cuisines-select');\r\n  const nSelect = document.getElementById('neighborhoods-select');\r\n\r\n  const cIndex = cSelect.selectedIndex;\r\n  const nIndex = nSelect.selectedIndex;\r\n\r\n  const cuisine = cSelect[cIndex].value;\r\n  const neighborhood = nSelect[nIndex].value;\r\n\r\n  DBHelper.fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, (error, restaurants) => {\r\n    if (error) { // Got an error!\r\n      console.error(error);\r\n    } else {\r\n      resetRestaurants(restaurants);\r\n      fillRestaurantsHTML();\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Clear current restaurants, their HTML and remove their map markers.\r\n */\r\nconst resetRestaurants = (restaurants) => {\r\n  // Remove all restaurants\r\n  self.restaurants = [];\r\n  const ul = document.getElementById('restaurants-list');\r\n  ul.innerHTML = '';\r\n\r\n  // Remove all map markers\r\n  if (self.markers) {\r\n    self.markers.forEach(marker => marker.remove());\r\n  }\r\n  self.markers = [];\r\n  self.restaurants = restaurants;\r\n}\r\n\r\n/**\r\n * Create all restaurants HTML and add them to the webpage.\r\n */\r\nconst fillRestaurantsHTML = (restaurants = self.restaurants) => {\r\n  const ul = document.getElementById('restaurants-list');\r\n  restaurants.forEach(restaurant => {\r\n    ul.append(createRestaurantHTML(restaurant));\r\n  });\r\n  addMarkersToMap();\r\n}\r\n\r\n/**\r\n * Create restaurant HTML.\r\n */\r\nconst createRestaurantHTML = (restaurant) => {\r\n  const li = document.createElement('li');\r\n\r\n  const image = document.createElement('img');\r\n  image.className = 'restaurant-img';\r\n  image.src = DBHelper.imageUrlForRestaurant(restaurant);\r\n  image.alt = restaurant.name;\r\n  li.append(image);\r\n  const txt =  document.createElement('div');\r\n  txt.className = 'restaurantInfo';\r\n  li.append(txt);\r\n\r\n  const name = document.createElement('h2');\r\n  name.innerHTML = restaurant.name;\r\n  txt.append(name);\r\n\r\n  const neighborhood = document.createElement('p');\r\n  neighborhood.innerHTML = restaurant.neighborhood;\r\n  txt.append(neighborhood);\r\n\r\n  const address = document.createElement('p');\r\n  address.innerHTML = restaurant.address;\r\n  txt.append(address);\r\n\r\n  const more = document.createElement('button');\r\n  more.innerHTML = 'View Details';\r\n  more.onclick = function(){\r\n    const url = DBHelper.urlForRestaurant(restaurant);\r\n    window.location = url;\r\n  }\r\n  txt.append(more)\r\n\r\n  return li\r\n}\r\n\r\n/**\r\n * Add markers for current restaurants to the map.\r\n */\r\nconst addMarkersToMap = (restaurants = self.restaurants) => {\r\n  restaurants.forEach(restaurant => {\r\n    // Add marker to the map\r\n    const marker = DBHelper.mapMarkerForRestaurant(restaurant, newMap);\r\n    marker.on(\"click\", onClick);\r\n    function onClick() {\r\n      window.location.href = marker.options.url;\r\n    }\r\n    self.markers.push(marker);\r\n  });\r\n\r\n}","if('serviceWorker' in navigator){\r\n  navigator.serviceWorker.register('/sw.js')\r\n  .then(reg =>{\r\n    console.log(\"it works!\"+ reg.scope);\r\n  })\r\n  .catch(err =>{\r\n    console.log(\"it failed :( \" + err);\r\n  })\r\n}\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}